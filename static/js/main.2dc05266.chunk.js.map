{"version":3,"sources":["containers/DocBody.js","components/MathJax.js","components/Link.js","containers/PageContainer.js","pages/mathematics/Page001.js","pages/index.js","pages/data-science/Page001.js","App.js","serviceWorker.js","index.js"],"names":["DocBody","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","pages","length","page","pageInfo","maxPage","title","react_default","a","createElement","Component","defaultProps","SCRIPT","loaded","timeout","update","clearTimeout","setTimeout","window","MathJax","Hub","Queue","loadScript","onLoad","check","value","match","_this2","err","setState","console","log","Config","showMathMenu","tex2jax","inlineMath","target","state","preview","innerText","nextState","prevProps","prevState","offsetHeight","_this3","className","ref","d","style","objectSpread","fontSize","Link","_ref","children","encodeURIComponent","href","concat","H3Link","_ref2","PageContainer","flex","data","split","map","v","t","trim","Link_H3Link","components_MathJax","q","i","PageContainer_PageContainer","App","_this","goPrev","goNext","Pages","print","onbeforeprint","onafterprint","join","p","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dc05266.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class DocBody extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount () {\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n  }\n\n  render() {\n    if (this.props.pages.length > 0) {\n      return this.props.pages[this.props.page].page({\n        pageInfo: {\n          page: this.props.page+1,\n          maxPage: this.props.maxPage,\n          title: this.props.title,\n        },\n      })\n    } else {\n      return <div></div>\n    }\n  }\n}\n\nDocBody.defaultProps = {\n  page: 0,\n  pages: [],\n  maxPage: 0,\n}\n","import React, { Component } from 'react';\nimport loadScript from 'load-script'\n\nconst SCRIPT = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_HTMLorMML';\n\nlet loaded = false;\nlet timeout = null;\nexport const update = () => {\n  if (timeout) clearTimeout(timeout);\n  timeout = setTimeout(() => {\n    (loaded) ? window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub]) : loadScript(SCRIPT, this.onLoad);\n  }, 100);\n}\n\nexport const check = (value) => {\n  return (value && (value.match(/\\\\\\(.+\\\\\\)/) || value.match(/\\$\\$.+\\$\\$/)));\n}\n\nclass MathJax extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      value: props.value,\n      target: props.target,\n    }\n  }\n\n  onLoad = (err) => {\n    this.setState({\n        loaded: true\n    })\n    loaded = true;\n    if (err)\n      console.log(err)\n    else {\n      window.MathJax.Hub.Config({\n        showMathMenu: true,\n        tex2jax: { inlineMath: [['$','$'],['\\\\(','\\\\)']] },\n      })\n      update(this.props.target)\n    }\n  }\n\n  componentDidMount() {\n    this.preview.innerText = this.props.value;\n    if (check(this.props.value)) {\n      this.state.loaded? update(this.props.target): loadScript(SCRIPT, this.onLoad);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!nextProps.value) return false\n    return nextProps.value !== this.state.value\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.preview.innerText = this.props.value;\n    if (check(this.props.value)) {\n      this.state.loaded? update(this.props.target) : loadScript(SCRIPT, this.onLoad);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.value,\n    })\n  }\n\n  offsetHeight() {\n    return this.preview.offsetHeight;\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={d => {this.preview = d}}\n        style={{ ...this.props.style, fontSize: '1.5em', }}\n      >\n      </div>\n    )\n  }\n}\n\nexport default MathJax;\n","import React, { Component } from 'react';\n\nexport default function({children}) {\n  return <a target={encodeURIComponent(children)} href={`https://www.google.com/search?q=${encodeURIComponent(children)}`}>{children}</a>\n}\n\nexport const H3Link = function({children}) {\n  return <h3>□ <a target={encodeURIComponent(children)} href={`https://www.google.com/search?q=${encodeURIComponent(children)}`}>{children}</a></h3>\n}\n","import React, { Component } from 'react';\nimport MathJax from '../components/MathJax';\nimport Link, { H3Link } from '../components/Link';\n\nexport default class PageContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount () {\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"Page-header\">\n          <p className=\"Page-title\" style={{ flex: 'auto' }}>{ this.props.title }</p>\n          <p className=\"Page-Number\" style={{ flex: 'auto' }}>{ this.props.page } / { this.props.maxPage }</p>\n        </div>\n        <div className=\"Page-body\">\n          { this.props.data.split('\\n').map( v => {\n              const t = v.trim().match('(#*)(.+)');\n              if (t) {\n                if (t[1] == '#') {\n                  return <H3Link>{t[2].trim()}</H3Link>\n                } else\n                if (v[0] == '$') {\n                  return <MathJax value={`${v}`} />\n                } else {\n                  const q = t[2].trim().split('、');\n                  return q.map( (v,i) => <span><Link>{v}</Link>{(i<q.length-1)?'、':''}</span> );\n                }\n              } else \n              if (v[0] == '$') {\n                return <MathJax value={`${v}`} />\n              }\n              return null;\n            })\n          }\n          {/* { this.props.children } */}\n        </div>\n      </div>\n    );\n  }\n}\n\nPageContainer.defaultProps = {\n  title: 'title',\n  page: 0,\n  maxPage: 0,\n  data: '',\n}\n","import React, { Component } from 'react';\nimport PageContainer from '../../containers/PageContainer';\nimport MathJax from '../../components/MathJax';\nimport Link from '../../components/Link';\n\nexport default function({ pageInfo }) {\n  return (\n    <PageContainer\n      title=\"三角関数\"\n      page={pageInfo.page}\n      maxPage={pageInfo.maxPage}\n    >\n      <h3>正弦(sine)の定義</h3>\n      <MathJax value=\"$$sin\\theta = \\frac{BC}{AB}$$\" />\n      <MathJax value=\"$$(sin\\theta = \\frac{y}{r})$$\" />\n      <h3>余弦(cosine)の定義</h3>\n      <MathJax value=\"$$cos\\theta = \\frac{AC}{AB}$$\" />\n      <MathJax value=\"$$(cos\\theta = \\frac{x}{r})$$\" />\n      <h3>正接(tangent)の定義</h3>\n      <MathJax value=\"$$tan\\theta = \\frac{BC}{AC}$$\" />\n      <MathJax value=\"$$(tan\\theta = \\frac{y}{x})$$\" />\n      <h3>正弦定理</h3>\n      <MathJax value=\"$$\\frac{a}{\\sin A} = \\frac{b}{\\sin B} = \\frac{c}{\\sin C}$$\" />\n      <h3>余弦定理</h3>\n      <MathJax value=\"$$ a^2 = b^2 + c^2 - 2bc\\cos A$$\" />\n      <MathJax value=\"$$ b^2 = c^2 + a^2 - 2ca\\cos B$$\" />\n      <MathJax value=\"$$ c^2 = a^2 + b^2 - 2ab\\cos C$$\" />\n      <h3>加法定理</h3>\n      <MathJax value=\"$$ \\sin (\\alpha \\pm \\beta) = \\sin \\alpha \\cos \\beta \\pm \\cos \\alpha \\sin \\beta $$\" />\n      <MathJax value=\"$$ \\cos (\\alpha \\pm \\beta) = \\cos \\alpha \\cos \\beta \\pm \\sin \\alpha \\sin \\beta $$\" />\n      <MathJax value=\"$$ \\tan (\\alpha \\pm \\beta) = \\frac{\\tan \\alpha \\pm \\tan \\beta}{1 \\pm \\tan \\alpha \\tan \\beta} $$\" />\n      <h3>２倍角の公式</h3>\n      <MathJax value=\"$$ \\sin 2\\alpha = 2 \\sin \\alpha \\cos \\alpha $$\" />\n      <MathJax value=\"$$ \\cos 2\\alpha = \\cos^2 \\alpha - \\sin^2 \\alpha $$\" />\n      <MathJax value=\"$$ = 2 \\cos^2\\alpha-1 $$\" />\n      <MathJax value=\"$$ = 1-2\\sin^2\\alpha $$\" />\n      <MathJax value=\"$$ \\tan 2\\alpha = \\frac{ 2 \\tan \\alpha } { 1 - \\tan^2 \\alpha } $$\" />\n      <h3>半角の公式</h3>\n      <MathJax value=\"$$ \\sin^2 \\frac{\\alpha}{2} = \\frac{1-\\cos \\alpha}{2} $$\" />\n      <MathJax value=\"$$ \\cos^2 \\frac{\\alpha}{2} = \\frac{1+\\cos \\alpha}{2} $$\" />\n      <MathJax value=\"$$ \\tan^2 \\frac{\\alpha}{2} = \\frac{\\sin^2 \\frac{\\alpha}{2}}{\\cos^2 \\frac{\\alpha}{2}} = \\frac{1-\\cos\\alpha}{1+\\cos\\alpha} $$\" />\n      <h3>３倍角の公式</h3>\n      <MathJax value=\"$$ \\sin3\\alpha = 3\\sin\\alpha - 4\\sin^3\\alpha $$\" />\n      <MathJax value=\"$$ \\cos3\\alpha = 4\\cos^3\\alpha - 3\\cos\\alpha $$\" />\n      <h3>積和の公式</h3>\n      <MathJax value=\"$$ \\sin\\alpha\\cos\\beta = \\frac{1}{2}\\{\\sin(\\alpha+\\beta)+\\sin(\\alpha-\\beta)\\} $$\" />\n      <MathJax value=\"$$ \\cos\\alpha\\cos\\beta = \\frac{1}{2}\\{\\cos(\\alpha+\\beta)+\\cos(\\alpha-\\beta)\\} $$\" />\n      <MathJax value=\"$$ \\sin\\alpha\\sin\\beta = \\frac{1}{2}\\{\\cos(\\alpha+\\beta)-\\cos(\\alpha-\\beta)\\} $$\" />\n      <h3>和積の公式</h3>\n      <MathJax value=\"$$ \\sin x + \\sin y = 2\\sin\\frac{x+y}{2}\\cos\\frac{x-y}{2} $$\" />\n      <MathJax value=\"$$ \\sin x - \\sin y = 2\\cos\\frac{x+y}{2}\\sin\\frac{x-y}{2} $$\" />\n      <MathJax value=\"$$ \\cos x + \\cos y = 2\\cos\\frac{x+y}{2}\\cos\\frac{x-y}{2} $$\" />\n      <MathJax value=\"$$ \\cos x - \\cos y = -2\\sin\\frac{x+y}{2}\\sin\\frac{x-y}{2} $$\" />\n      <h3>次数下げ</h3>\n      <MathJax value=\"$$ \\sin^2\\alpha = \\frac{1-\\cos2\\alpha}{2} $$\" />\n      <MathJax value=\"$$ \\cos^2\\alpha = \\frac{1+\\cos2\\alpha}{2} $$\" />\n      <MathJax value=\"$$ \\sin\\alpha\\cos\\alpha = \\frac{\\sin2\\alpha}{2} $$\" />\n      <h3>sinの合成</h3>\n      <MathJax value=\"$$ a \\sin \\theta + b \\cos \\theta =  \\sqrt{ a^2 + b^2 } \\sin(\\theta + \\alpha)$$\" />\n      <h3>cosの合成</h3>\n      <MathJax value=\"$$ a \\sin \\theta + b \\cos \\theta =  \\sqrt{ a^2 + b^2 } \\cos(\\theta - \\beta)$$\" />\n      <h3>相互関係</h3>\n      <MathJax value=\"$$ \\sin^2 \\theta + \\cos^2 \\theta = 1 $$\" />\n      <MathJax value=\"$$ \\tan \\theta = \\frac{ \\sin \\theta }{ \\cos \\theta } $$\" />\n      <MathJax value=\"$$ \\tan^2 \\theta + 1 = \\frac{ 1 }{ \\cos^2 \\theta } $$\" />\n      <h3>アークサイン</h3>\n      <MathJax value=\"$$ \\sin^{-1} x = \\arcsin x $$\" />\n      <h3>アークコサイン</h3>\n      <MathJax value=\"$$ \\cos^{-1} x = \\arccos x $$\" />\n      <h3>アークタンジェント</h3>\n      <MathJax value=\"$$ \\tan^{-1} x = \\arctan x $$\" />\n      <h3>三角関数の導関数</h3>\n      <MathJax value=\"$$ (\\sin x)' = \\cos x $$\" />\n      <MathJax value=\"$$ (\\cos x)' = - \\sin x $$\" />\n      <MathJax value=\"$$ (\\tan x)' = \\frac{ 1 }{ \\cos^2 x } $$\" />\n      <MathJax value=\"$$ (\\sin^{-1} x)' = \\frac{ 1 }{ \\sqrt{ 1-x^2 } } $$\" />\n      <MathJax value=\"$$ (\\cos^{-1} x)' = - \\frac{ 1 }{ \\sqrt{ 1-x^2 } } $$\" />\n      <MathJax value=\"$$ (\\tan^{-1} x)' = \\frac{ 1 }{ 1-x^2 } $$\" />\n      <h3>三角関数の積分</h3>\n      <MathJax value=\"$$ \\int \\sin x dx = - \\cos x + C $$\" />\n      <MathJax value=\"$$ \\int \\cos x dx = \\sin x + C $$\" />\n      <MathJax value=\"$$ \\int \\tan x dx = - log | \\cos x | + C $$\" />\n      <MathJax value=\"$$ \\int \\sec^2 x dx = \\tan x + C $$\" />\n      <MathJax value=\"$$ \\int \\csc^2 x dx = - \\cot x + C $$\" />\n    </PageContainer>\n  )\n}\n","import React from 'react';\n\nimport MathPage001 from './mathematics/Page001';\nimport MathPage002 from './mathematics/Page002';\nimport MathPage003 from './mathematics/Page003';\nimport MathPage004 from './mathematics/Page004';\nimport MathPage005 from './mathematics/Page005';\nimport MathPage006 from './mathematics/Page006';\nimport MathPage007 from './mathematics/Page007';\nimport MathPage008 from './mathematics/Page008';\nimport MathPage009 from './mathematics/Page009';\nimport MathPage010 from './mathematics/Page010';\nimport MathPage011 from './mathematics/Page011';\nimport MathPage012 from './mathematics/Page012';\nimport MathPage013 from './mathematics/Page013';\n\nimport DataPage001 from './data-science/Page001';\nimport DataPage002 from './data-science/Page002';\nimport DataPage003 from './data-science/Page003';\nimport DataPage004 from './data-science/Page004';\nimport DataPage005 from './data-science/Page005';\nimport DataPage006 from './data-science/Page006';\nimport DataPage007 from './data-science/Page007';\n\nexport default [\n  { page: DataPage001, title: '探索的データ分析', },\n\n  // { page: MathPage001, title: '三角関数', },\n  // { page: MathPage002, title: '微分', },\n  // { page: MathPage003, title: '積分', },\n  // { page: MathPage004, title: '複素数', },\n  // { page: MathPage005, title: '関数', },\n  // { page: MathPage006, title: '幾何', },\n  // { page: MathPage007, title: 'ベクトル', },\n  // { page: MathPage008, title: '確率', },\n  // { page: MathPage009, title: '数列', },\n  // { page: MathPage010, title: '行列', },\n  // { page: MathPage011, title: '指数/対数', },\n  // { page: MathPage012, title: '数と式', },\n  // { page: MathPage013, title: '確率統計', },\n\n  // { page: DataPage002, title: 'データと標本の分布', },\n  // { page: DataPage003, title: '統計実験と有意性検定', },\n  // { page: DataPage004, title: '回帰と予測', },\n  // { page: DataPage005, title: '分類', },\n  // { page: DataPage006, title: '統計的機械学習', },\n  // { page: DataPage007, title: '教師なし学習', },\n\n]\n","import React, { Component } from 'react';\nimport PageContainer from '../../containers/PageContainer';\nimport MathJax from '../../components/MathJax';\nimport Link, { H3Link } from '../../components/Link';\n\nconst data = `\n# データ型\n連続データ、離散データ、カテゴリデータ、バイナリデータ、順序尺度データ\n# 矩形データ\nデータフレーム、特徴量、成果（変数）、レコード\n# 位置の推定\n平均値、加重平均、中央値、加重中央値、トリム平均、頑健性、外れ値\n# 散らばりの指標\n偏差、分散、標準偏差、平均絶対偏差、中央値絶対偏差、範囲、順序統計量、パーセンタイル、四分位範囲\n不偏分散、標準偏差\n# 分布の探索\n箱ひげ図、度数分布表、ヒストグラム、密度プロット\n# カテゴリデータの探索\n最頻値（モード）、期待値、棒グラフ（バーチャート）、円グラフ（パイチャート）\n# 相関\n相関係数、相関行列、散布図\n# ２つ以上の変数の探索\n分割表、六角ビニングプロット、等高線プロット、バイオリンプロット\n`\n\nexport default function({ pageInfo }) {\n  return (\n    <PageContainer\n      title=\"探索的データ分析\"\n      page={pageInfo.page}\n      maxPage={pageInfo.maxPage}\n      data={data}\n    />\n  )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport DocBody from './containers/DocBody';\nimport MathJax, { update as MathJaxUpdate, check as MathJaxCheck, }  from './components/MathJax';\nimport Pages from './pages';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      print: false,\n    }\n  }\n\n  componentDidMount () {\n    window.onbeforeprint = () => {\n      this.setState({\n        print: true,\n      })\n    }\n    window.onafterprint = () => {\n      this.setState({\n        print: false,\n      })\n    }\n  }\n\n  componentWillUnmount() {\n  }\n\n  componentWillReceiveProps(nextProps) {\n  }\n\n  goPrev = () => {\n    if (this.state.page > 0) {\n      this.setState({\n        page: this.state.page-1,\n      })\n    }\n  }\n\n  goNext = () => {\n    if (Pages.length-1 > this.state.page) {\n      this.setState({\n        page: this.state.page+1,\n      })\n    }\n  }\n\n  render() {\n    // if (this.state.print) {\n    //   return (\n    //     <div className=\"App\">\n    //       {\n    //         Pages.map( (v, i) => {\n    //           return <div key={i} className=\"page-divide\"> {\n    //             v.page({\n    //               pageInfo: {\n    //                 page: i+1,\n    //                 maxPage: this.props.maxPage,\n    //               },\n    //             })\n    //           } </div>\n    //         })\n    //       }\n    //     </div>\n    //   )\n    // } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {/* <button className=\"App-header-button\" onClick={this.goPrev}>前のページ</button> */}\n            <p className={[\"App-title\",\"App-header-col\"].join(' ')}>データアントプレナー 虎の巻</p>\n            {/* <button className=\"App-header-button\" onClick={this.goNext}>次のページ</button> */}\n          </header>\n          {\n            Pages.map( (p,i) => {\n              return p.page({\n                pageInfo: {\n                  page: i+1,\n                  maxPage: Pages.length,\n                  title: '',\n                }\n              })\n            })\n          }\n          \n          {/* <DocBody\n            page={this.state.page}\n            maxPage={Pages.length}\n            pages={Pages}\n          /> */}\n        </div>\n      );\n    // }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}